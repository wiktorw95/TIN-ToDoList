$primary: hsl(221, 83%, 53%);
$danger: hsl(0, 72%, 55%);
$warning: hsl(32, 84%, 48%);
$success: hsl(160, 70%, 40%);
$white: #fff;
$black: #1e293b;
$gray: #f1f5f9;
$gray-dark: #64748b;
$gray-light: #e2e8f0;
// UI style values
$radius: 8px;
$radius-lg: 12px;
$shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
$shadow-lg: 0 10px 25px rgba(0, 0, 0, 0.15);
$transition: 0.2s ease all;
// Mixins
//
@mixin interactive {
  cursor: pointer;
  transition: $transition;
  &:hover {
    transform: translateY(-1px);
  }}
@mixin button($bg: $white, $color: $black, $border: $gray-light) {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px 16px;
  border: 1px solid $border;
  border-radius: $radius;
  background: $bg;
  color: $color;
  font-size: 14px;
  font-weight: 500;
  text-decoration: none;
  outline: none;
  @include interactive;
  &:focus {
    box-shadow: 0 0 0 3px rgba(34, 112, 243, 0.1);
  }
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }}
@mixin input {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid $gray-light;
  border-radius: $radius;
  background: $white;
  color: $black;
  font-size: 14px;
  transition: $transition;
  &:focus {
    border-color: $primary;
    box-shadow: 0 0 0 3px rgba(34, 112, 243, 0.1);
    outline: none;
  }
  &::placeholder { color: $gray-dark; }
}
@mixin card {
  background: $white;
  border: 1px solid $gray-light;
  border-radius: $radius-lg;
  box-shadow: $shadow;
  padding: 24px;}
// Base reset

*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
   font-family: sans-serif;
  background: $gray;
  color: $black;
  line-height: 1.6;
  font-size: 14px;
}
// Layout
#List-app {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}
header
{
  text-align: center;
  margin-bottom: 32px;
  h1 {
    font-size: clamp(24px, 5vw, 32px);
    font-weight: 700;
    margin-bottom: 8px;
  }
}
// Forms
.task-form, .filter-bar {
  @include card;
  margin-bottom: 24px;
  display: grid;
  gap: 16px;
  input, select { @include input; }
  button {
    @include button($primary, $white, $primary);
    padding: 12px 24px;
    font-weight: 600;
    &:hover:not(:disabled) { background: darken($primary, 10%); }
  }
}
.task-form {
  grid-template-columns: 2fr repeat(3, 1fr) auto;
  @media (max-width: 576px) {
    grid-template-columns: 1fr; }
}
.filter-bar {
  grid-template-columns: 2fr 1fr 1fr;
  @media (max-width: 768px) { grid-template-columns: 1fr; }
}
// Task list
#taskList {
  list-style: none;
  margin-bottom: 24px;
  li {
    @include card;
    @include interactive;
    margin-bottom: 12px;
    display: flex;
    align-items: center;
    gap: 16px;
    padding: 16px 20px;
    cursor: grab;
    &:hover { box-shadow: $shadow-lg; }
    &:active { cursor: grabbing; }
    &.completed {
      opacity: 0.7;
      background: $gray-light;
      strong {
        text-decoration: line-through;
        color: $gray-dark;
      }
    }
    &.high {
      border-left: 50px solid $danger;
      background: hsla(0, 72%, 55%, 0.2);
    }
    &.medium {
      border-left: 50px solid $warning;
      background: hsla(32, 84%, 48%, 0.2);
    }
    &.low {
      border-left: 50px solid $success;
      background: hsla(160, 70%, 40%, 0.2);
    }
    label {
      display: flex;
      align-items: center;
      flex: 1;
      gap: 12px;
      cursor: pointer;
      input[type="checkbox"] {
        width: 18px;
        height: 18px;
        accent-color: $primary;
      }
      div {
        flex: 1;
        strong {
          display: block;
          font-size: 16px;
          font-weight: 600;
          margin-bottom: 4px;
        }
        .meta {
          font-size: 12px;
          color: $gray-dark;
          display: flex;
          gap: 8px;
          flex-wrap: wrap;
        }
      }
    }
    > div:last-child {
      display: flex;
      gap: 8px;
      button {
        @include button;
        width: 36px;
        height: 36px;
        padding: 0;
        font-size: 16px;
        &:first-child:hover {
          background: rgba($primary, 0.1);
          border-color: $primary;
        }
        &:last-child:hover {
          background: rgba($danger, 0.1);
          border-color: $danger;
        }
      }
    }
  }
}
// Controls
.controls {
  @include card;
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  align-items: center;

  button, input:not([type="file"]) {
    @include button;
    &:hover:not(:disabled) {
      background: $gray-light;
    }
  }
  input[type="file"] {
    position: relative;
    @include button($gray-light, $black, $gray-light);
    max-width: 200px;
    padding: 8px 12px;
    font-size: 12px;
    overflow: hidden;
    &::file-selector-button {
      background: $primary;
      color: $white;
      border: none;
      padding: 4px 8px;
      border-radius: 4px;
      margin-right: 8px;
      font-size: 11px;
      font-weight: 500;
      cursor: pointer;
      transition: $transition;
    }
    &:hover {
      background: $white;
      border-color: $primary;
      &::file-selector-button {
        background: darken($primary, 10%);
      }
    }
  }
  > div {
    display: flex;
    gap: 8px;
    margin-left: auto;
    button {
      font-size: 12px;
      padding: 6px 12px;
      $button-colors: $primary, $success, $danger;
      @each $color in $button-colors {
        $index: index($button-colors, $color);
        &:nth-child(#{$index}) {
          @include button(rgba($color, 0.1), $color, $color);
        }
      }
      &:hover {
        color: $white;
        @each $color in $button-colors {
          $index: index($button-colors, $color);
          &:nth-child(#{$index}) {
            background: $color;
          }
        }
      }
    }
  }
}
// Modal
#editModal {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  justify-content: center;
  align-items: center;  z-index: 1000;
  backdrop-filter: blur(4px);
  > div {
    background: $white;
    border-radius: $radius-lg;
    padding: 32px;
    width: min(500px, 90vw);
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: $shadow-lg;
    h3 {
      margin-bottom: 24px;
      font-size: 20px;
      font-weight: 600;
    }
    > div {
      margin-bottom: 16px;
      &:last-of-type { margin-bottom: 24px; }
    }
    input, select {
      @include input;
      margin-bottom: 4px;
    }
    button {
      @include button;
      margin-right: 12px;
      &:first-of-type {
        @include button($primary, $white, $primary);
        &:hover { background: darken($primary, 10%);
        }
      }
    }
  }
}
// Utilities
.error-message {
  color: $danger;
  font-size: 12px;
  margin-top: 4px;
  display: none;
  &.show { display: inline-flex; }
}
// Animations
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-50px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
// Responsive
@media (max-width: 768px) {
  #List-app { padding: 16px; }
  .controls > div {
    margin-left: 0;
    width: 100%;
    justify-content: center;
  }
}
@media (max-width: 576px) {
  #List-app { padding: 12px; }
  .task-form, .filter-bar, .controls { padding: 16px; }
  #taskList li {
    padding: 10px 16px;
    flex-direction: column;
    align-items: stretch;
    gap: 12px;
    label { order: 1; }
    > div:last-child {
      order: 2;
      justify-content: right;
    }
    .meta {
      flex-direction: column;
      gap: 2px;
    }
  }
  .controls input[type="file"] { max-width: 100%; }
  #edit-modal > div { padding: 24px; }}